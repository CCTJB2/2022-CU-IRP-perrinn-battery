#1
char Aclass(3,20)
Adymosim
1.4
Generated by Dymosim


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
       0                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     100                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       1                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  9.9999999999999998E-13   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
       0                   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 0                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(145,38)
_dummy
_derdummy
Temp.k
radius_c.k
ro.multiSum.significantDigits
ro.multiSum.nu
ro.multiSum.k[1]
ro.multiSum.k[2]
ro.multiSum.k[3]
ro.multiSum.k[4]
ro.y
ro.SoC
ro.Lc
ro.Ls
ro.La
ro.Rcc
ro.A
ro.Rbar
ro.F
ro.sigma_e1.y
ro.sigma_e1.Ce_0
ro.sigma_e1.T_square.significantDigits
ro.sigma_e1.T_square.nu
ro.sigma_e1.T_square.y
ro.sigma_e1.K00.k
ro.sigma_e1.product.u1
ro.sigma_e1.product.u2
ro.sigma_e1.product.y
ro.sigma_e1.multiSum.significantDigits
ro.sigma_e1.multiSum.nu
ro.sigma_e1.multiSum.u[2]
ro.sigma_e1.multiSum.u[3]
ro.sigma_e1.multiSum.u[4]
ro.sigma_e1.multiSum.u[5]
ro.sigma_e1.multiSum.y
ro.sigma_e1.multiSum.k[1]
ro.sigma_e1.multiSum.k[2]
ro.sigma_e1.multiSum.k[3]
ro.sigma_e1.multiSum.k[4]
ro.sigma_e1.multiSum.k[5]
ro.sigma_e1.K01.k
ro.sigma_e1.K02.k
ro.sigma_e1.K11.k
ro.sigma_e1.K11.y
ro.sigma_e1.K12.k
ro.sigma_e1.K12.y
ro.sigma_e1.K21.k
ro.sigma_e1.K21.y
ro.sigma_e1.realExpression2.y
ro.sigma_e1.K20.k
ro.sigma_e1.K10.k
ro.sigma_e1.add3_1.k1
ro.sigma_e1.add3_1.k2
ro.sigma_e1.add3_1.k3
ro.sigma_e1.product1.u1
ro.sigma_e1.product1.u2
ro.sigma_e1.add.k1
ro.sigma_e1.add.k2
ro.sigma_e1.Gain.k
ro.a_c.y
ro.a_c.epsilon
ro.a_c.R
ro.a_c.gain.k
ro.a_c.gain.y
ro.epsilon_c
ro.epsilon_a
ro.radius_c
ro.radius_a
ro.a_a.y
ro.a_a.epsilon
ro.a_a.R
ro.a_a.gain.k
ro.a_a.gain.y
ro.Ce_0
ro.division.u1
ro.division.u2
ro.gain.k
ro.ConstantFor3and4Term1.y
ro.division1.u2
ro.division2.u1
ro.division2.u2
ro.multiProduct.significantDigits
ro.multiProduct.nu
ro.multiProduct.u[2]
ro.multiProduct.u[3]
ro.i0_c_ref.F
ro.i0_c_ref.k
ro.i0_c_ref.c_max
ro.i0_c_ref.Ce_0
ro.i0_c_ref.Fk_express.y
ro.i0_c_ref.F_express1.y
ro.i0_c_ref.sqrt1.y
ro.i0_c_ref.theta
ro.multiProduct1.significantDigits
ro.multiProduct1.nu
ro.multiProduct1.u[2]
ro.multiProduct1.u[3]
ro.kc
ro.ka
ro.c_max_c
ro.c_max_a
ro.soC_theta_c.theta_0
ro.soC_theta_c.theta_100
ro.soC_theta_a.y
ro.soC_theta_a.theta_0
ro.soC_theta_a.theta_100
ro.theta_0_c
ro.theta_0_a
ro.theta_100_c
ro.theta_100_a
ro.i0_a_ref.F
ro.i0_a_ref.k
ro.i0_a_ref.c_max
ro.i0_a_ref.Ce_0
ro.i0_a_ref.Fk_express.y
ro.i0_a_ref.F_express1.y
ro.i0_a_ref.sqrt1.y
Lc.k
Ls.k
La.k
Rcc.k
A.k
Rbar.k
F.k
epsilon_c.k
epsilon_a.k
radius_a.k
Ce_0.k
SoC.height
SoC.duration
SoC.offset
SoC.startTime
c_max_c.k
c_max_a.k
kc.k
ka.k
theta_0_c.k
theta_0_a.k
theta_100_c.k
theta_100_a.k
Rcc_out
phi_ohmic
eta_a
eta_c
phi_ohmic_express.y

double initialValue(145,6)
 -1       1                  0       0                  2    0   # _dummy
  0       0                  0       0                  3    0   # _derdummy
 -1  2.9814999999999998E+02  0       0                  1  280   # Temp.k
 -1  3.9999999999999998E-06  0       0                  1  280   # radius_c.k
 -1       3                  1 1.0000000000000000E+100  1  282   # ro.multiSum.significantDigits
  0       4                  0 1.0000000000000000E+100  6  770   # ro.multiSum.nu
 -1       1                  0       0                  1  280   # ro.multiSum.k[1]
 -1       1                  0       0                  1  280   # ro.multiSum.k[2]
 -1       1                  0       0                  1  280   # ro.multiSum.k[3]
 -1       1                  0       0                  1  280   # ro.multiSum.k[4]
  0       0                  0       0                  6  256   # ro.y
  0       0                  0       0                  6  256   # ro.SoC
  0       0                  0       0                  6  256   # ro.Lc
  0       0                  0       0                  6  256   # ro.Ls
  0       0                  0       0                  6  256   # ro.La
  0       0                  0       0                  6  256   # ro.Rcc
  0       0                  0       0                  6  256   # ro.A
  0       0                  0       0                  6  256   # ro.Rbar
  0       0                  0       0                  6  256   # ro.F
  0       0                  0       0                  6  256   # ro.sigma_e1.y
  0       0                  0       0                  6  256   # ro.sigma_e1.Ce_0
 -1       3                  1 1.0000000000000000E+100  1  282   # ro.sigma_e1.T_square.significantDigits
  0       2                  0 1.0000000000000000E+100  6  770   # ro.sigma_e1.T_square.nu
  0       0                  0       0                  6  256   # ro.sigma_e1.T_square.y
 -1 -1.0500000000000000E+01  0       0                  1  280   # ro.sigma_e1.K00.k
  0       0                  0       0                  6  256   # ro.sigma_e1.product.u1
  0       0                  0       0                  6  256   # ro.sigma_e1.product.u2
  0       0                  0       0                  6  256   # ro.sigma_e1.product.y
 -1       3                  1 1.0000000000000000E+100  1  282   # ro.sigma_e1.multiSum.significantDigits
  0       5                  0 1.0000000000000000E+100  6  770   # ro.sigma_e1.multiSum.nu
  0       0                  0       0                  6  256   # ro.sigma_e1.multiSum.u[2]
  0       0                  0       0                  6  256   # ro.sigma_e1.multiSum.u[3]
  0       0                  0       0                  6  256   # ro.sigma_e1.multiSum.u[4]
  0       0                  0       0                  6  256   # ro.sigma_e1.multiSum.u[5]
  0       0                  0       0                  6  256   # ro.sigma_e1.multiSum.y
 -1       1                  0       0                  1  280   # ro.sigma_e1.multiSum.k[1]
 -1       1                  0       0                  1  280   # ro.sigma_e1.multiSum.k[2]
 -1       1                  0       0                  1  280   # ro.sigma_e1.multiSum.k[3]
 -1       1                  0       0                  1  280   # ro.sigma_e1.multiSum.k[4]
 -1       1                  0       0                  1  280   # ro.sigma_e1.multiSum.k[5]
 -1  7.3999999999999996E-02  0       0                  1  280   # ro.sigma_e1.K01.k
 -1 -6.9599999999999998E-05  0       0                  1  280   # ro.sigma_e1.K02.k
 -1 -1.7800000000000000E-02  0       0                  1  280   # ro.sigma_e1.K11.k
  0       0                  0       0                  6  256   # ro.sigma_e1.K11.y
 -1  2.8000000000000000E-05  0       0                  1  280   # ro.sigma_e1.K12.k
  0       0                  0       0                  6  256   # ro.sigma_e1.K12.y
 -1 -8.8599999999999996E-04  0       0                  1  280   # ro.sigma_e1.K21.k
  0       0                  0       0                  6  256   # ro.sigma_e1.K21.y
  0       0                  0       0                  6  256   # ro.sigma_e1.realExpression2.y
 -1  4.9399999999999999E-01  0       0                  1  280   # ro.sigma_e1.K20.k
 -1  6.6800000000000004E-01  0       0                  1  280   # ro.sigma_e1.K10.k
 -1       1                  0       0                  1  280   # ro.sigma_e1.add3_1.k1
 -1       1                  0       0                  1  280   # ro.sigma_e1.add3_1.k2
 -1       1                  0       0                  1  280   # ro.sigma_e1.add3_1.k3
  0       0                  0       0                  6  256   # ro.sigma_e1.product1.u1
  0       0                  0       0                  6  256   # ro.sigma_e1.product1.u2
 -1       1                  0       0                  1  280   # ro.sigma_e1.add.k1
 -1       1                  0       0                  1  280   # ro.sigma_e1.add.k2
 -1  1.0000000000000001E-01  0       0                  1  280   # ro.sigma_e1.Gain.k
  0       0                  0       0                  6  256   # ro.a_c.y
  0       0                  0       0                  6  256   # ro.a_c.epsilon
  0       0                  0       0                  6  256   # ro.a_c.R
 -1       3                  0       0                  1  280   # ro.a_c.gain.k
  0       0                  0       0                  6  256   # ro.a_c.gain.y
  0       0                  0       0                  6  256   # ro.epsilon_c
  0       0                  0       0                  6  256   # ro.epsilon_a
  0       0                  0       0                  6  256   # ro.radius_c
  0       0                  0       0                  6  256   # ro.radius_a
  0       0                  0       0                  6  256   # ro.a_a.y
  0       0                  0       0                  6  256   # ro.a_a.epsilon
  0       0                  0       0                  6  256   # ro.a_a.R
 -1       3                  0       0                  1  280   # ro.a_a.gain.k
  0       0                  0       0                  6  256   # ro.a_a.gain.y
  0       0                  0       0                  6  256   # ro.Ce_0
  0       0                  0       0                  6  256   # ro.division.u1
  0       0                  0       0                  6  256   # ro.division.u2
  0       1                  0       0                  6  256   # ro.gain.k
  0       0                  0       0                  6  256   # ro.ConstantFor3and4Term1.y
  0       0                  0       0                  6  256   # ro.division1.u2
  0       0                  0       0                  6  256   # ro.division2.u1
  0       0                  0       0                  6  256   # ro.division2.u2
 -1       3                  1 1.0000000000000000E+100  1  282   # ro.multiProduct.significantDigits
  0       3                  0 1.0000000000000000E+100  6  770   # ro.multiProduct.nu
  0       0                  0       0                  6  256   # ro.multiProduct.u[2]
  0       0                  0       0                  6  256   # ro.multiProduct.u[3]
  0       0                  0       0                  6  256   # ro.i0_c_ref.F
  0       0                  0       0                  6  256   # ro.i0_c_ref.k
  0       0                  0       0                  6  256   # ro.i0_c_ref.c_max
  0       0                  0       0                  6  256   # ro.i0_c_ref.Ce_0
  0       0                  0       0                  6  256   # ro.i0_c_ref.Fk_express.y
  0       0                  0       0                  6  256   # ro.i0_c_ref.F_express1.y
  0       0                  0       0                  6  256   # ro.i0_c_ref.sqrt1.y
  0       0                  0       0                  6  256   # ro.i0_c_ref.theta
 -1       3                  1 1.0000000000000000E+100  1  282   # ro.multiProduct1.significantDigits
  0       3                  0 1.0000000000000000E+100  6  770   # ro.multiProduct1.nu
  0       0                  0       0                  6  256   # ro.multiProduct1.u[2]
  0       0                  0       0                  6  256   # ro.multiProduct1.u[3]
  0       0                  0       0                  6  256   # ro.kc
  0       0                  0       0                  6  256   # ro.ka
  0       0                  0       0                  6  256   # ro.c_max_c
  0       0                  0       0                  6  256   # ro.c_max_a
  0       0                  0       0                  6  256   # ro.soC_theta_c.theta_0
  0       0                  0       0                  6  256   # ro.soC_theta_c.theta_100
  0       0                  0       0                  6  256   # ro.soC_theta_a.y
  0       0                  0       0                  6  256   # ro.soC_theta_a.theta_0
  0       0                  0       0                  6  256   # ro.soC_theta_a.theta_100
  0       0                  0       0                  6  256   # ro.theta_0_c
  0       0                  0       0                  6  256   # ro.theta_0_a
  0       0                  0       0                  6  256   # ro.theta_100_c
  0       0                  0       0                  6  256   # ro.theta_100_a
  0       0                  0       0                  6  256   # ro.i0_a_ref.F
  0       0                  0       0                  6  256   # ro.i0_a_ref.k
  0       0                  0       0                  6  256   # ro.i0_a_ref.c_max
  0       0                  0       0                  6  256   # ro.i0_a_ref.Ce_0
  0       0                  0       0                  6  256   # ro.i0_a_ref.Fk_express.y
  0       0                  0       0                  6  256   # ro.i0_a_ref.F_express1.y
  0       0                  0       0                  6  256   # ro.i0_a_ref.sqrt1.y
 -1  7.4999999999999993E-05  0       0                  1  280   # Lc.k
 -1  2.0000000000000002E-05  0       0                  1  280   # Ls.k
 -1  6.9999999999999994E-05  0       0                  1  280   # La.k
 -1  4.0000000000000002E-04  0       0                  1  280   # Rcc.k
 -1       2                  0       0                  1  280   # A.k
 -1  8.3140000000000001E+00  0       0                  1  280   # Rbar.k
 -1   96500                  0       0                  1  280   # F.k
 -1  5.4600000000000004E-01  0       0                  1  280   # epsilon_c.k
 -1  5.1000000000000001E-01  0       0                  1  280   # epsilon_a.k
 -1  3.0000000000000001E-06  0       0                  1  280   # radius_a.k
 -1    1000                  0       0                  1  280   # Ce_0.k
 -1       1                  0       0                  1  280   # SoC.height
 -1       1                  0 1.0000000000000000E+100  1  280   # SoC.duration
 -1       0                  0       0                  1  280   # SoC.offset
 -1       0                  0       0                  1  280   # SoC.startTime
 -1   43000                  0       0                  1  280   # c_max_c.k
 -1   31300                  0       0                  1  280   # c_max_a.k
 -1  3.0000000000000000E-11  0       0                  1  280   # kc.k
 -1  8.9999999999999999E-11  0       0                  1  280   # ka.k
 -1  9.9029999999999996E-01  0       0                  1  280   # theta_0_c.k
 -1  6.2100000000000002E-02  0       0                  1  280   # theta_0_a.k
 -1  4.3840000000000001E-01  0       0                  1  280   # theta_100_c.k
 -1  9.3730000000000002E-01  0       0                  1  280   # theta_100_a.k
  0       0                  0       0                  4  256   # Rcc_out
  0       0                  0       0                  4  256   # phi_ohmic
  0       0                  0       0                  4  256   # eta_a
  0       0                  0       0                  4  256   # eta_c
  0       0                  0       0                  6  256   # phi_ohmic_express.y


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(145,90)
dummy
derdummy
Constant output value
Constant output value
Number of significant digits to be shown in dynamic diagram layer for y [:#(type=Integer)]
Number of input connections [:#(type=Integer)]
Input gains
Input gains
Input gains
Input gains


Thickness of cathode
Thickness of seperator
Thickness of anode
Current Collector Resistance in Ohms
Electrode area in square meter [1]
Universal Gas constant, 8.314 J/mol K
Faraday's Constant, Coulmb/mol, Ampere-second/mol
effective ionic conductivity of electrolyte, mS/cm
Initial Electrolyte Concentration in mol/m^3, 1e3
Number of significant digits to be shown in dynamic diagram layer for y [:#(type=Integer)]
Number of input connections [:#(type=Integer)]

Constant output value
Connector of Real input signal 1
Connector of Real input signal 2
Connector of Real output signal
Number of significant digits to be shown in dynamic diagram layer for y [:#(type=Integer)]
Number of input connections [:#(type=Integer)]





Input gains
Input gains
Input gains
Input gains
Input gains
Gain value multiplied with input signal [1]
Gain value multiplied with input signal [1]
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Output signal connector
Value of Real output
Constant output value
Constant output value
Gain of upper input
Gain of middle input
Gain of lower input
Connector of Real input signal 1
Connector of Real input signal 2
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]

active material volume fraction
particle size in m, magnitude is usually 1e-6
Gain value multiplied with input signal [1]
Output signal connector
active material volume fraction of cathode
active material volume fraction of anode
particle radius of cathode active material, in m, magnitude usually 1e-6
particle radius of anode active material, in m, magnitude usually 1e-6

active material volume fraction
particle size in m, magnitude is usually 1e-6
Gain value multiplied with input signal [1]
Output signal connector
Initial Electrolyte concentration, in mol/m^3, usually 1e3
Connector of Real input signal 1
Connector of Real input signal 2
Gain value multiplied with input signal [1]
Value of Real output
Connector of Real input signal 2
Connector of Real input signal 1
Connector of Real input signal 2
Number of significant digits to be shown in dynamic diagram layer for y [:#(type=Integer)]
Number of input connections [:#(type=Integer)]


Faraday's Constant, Coulmb/mol, Ampere-second/mol
electrode reaction rate coefficient, kinetic rate constants
Maximum concentration at the electrode, mol/m^3
Initial Electrolyte Concentration in mol/m^3, 1e3
Value of Real output
Value of Real output
Connector of Real output signal
Molar Fraction at the electrode
Number of significant digits to be shown in dynamic diagram layer for y [:#(type=Integer)]
Number of input connections [:#(type=Integer)]


kinetic rate constant for cathode, reaction rate coefficient
kinetic rate constant for anode, reaction rate coefficient
Maximum concentration of cathode, in mol/m^3
Maximum concentration of anode, in mol/m^3
Molar Fraction of electrode at 0% SoC
Molar Fraction of electrode at 100% SoC

Molar Fraction of electrode at 0% SoC
Molar Fraction of electrode at 100% SoC
Molar Fraction of cathode at 0% SoC
Molar Fraction of anode at 0% SoC
Molar Fraction of cathode at 100% SoC
Molar Fraction of anode at 1 SoC
Faraday's Constant, Coulmb/mol, Ampere-second/mol
electrode reaction rate coefficient, kinetic rate constants
Maximum concentration at the electrode, mol/m^3
Initial Electrolyte Concentration in mol/m^3, 1e3
Value of Real output
Value of Real output
Connector of Real output signal
Constant output value
Constant output value
Constant output value
Constant output value
Constant output value [1]
Constant output value
Constant output value
Constant output value
Constant output value
Constant output value
Constant output value
Height of ramps
Duration of ramp (= 0.0 gives a Step) [s]
Offset of output signal
Output = offset for time < startTime [s]
Constant output value
Constant output value
Constant output value
Constant output value
Constant output value
Constant output value
Constant output value
Constant output value




Value of Real output

